name: Deploy to ConoHa WING

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build
      run: npm run build
      
    - name: Add .htaccess for SPA routing
      run: |
        cat > dist/.htaccess << 'EOF'
        RewriteEngine On
        
        # Handle React Router
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteRule . /index.html [L]
        
        # MIME Types
        AddType application/javascript .js
        AddType text/css .css
        AddType image/svg+xml .svg
        
        # Security Headers
        <IfModule mod_headers.c>
            Header always set X-Content-Type-Options nosniff
            Header always set X-Frame-Options DENY
            Header always set X-XSS-Protection "1; mode=block"
            Header always set Referrer-Policy "strict-origin-when-cross-origin"
        </IfModule>
        
        # Gzip Compression
        <IfModule mod_deflate.c>
            AddOutputFilterByType DEFLATE text/plain
            AddOutputFilterByType DEFLATE text/html
            AddOutputFilterByType DEFLATE text/xml
            AddOutputFilterByType DEFLATE text/css
            AddOutputFilterByType DEFLATE application/xml
            AddOutputFilterByType DEFLATE application/xhtml+xml
            AddOutputFilterByType DEFLATE application/rss+xml
            AddOutputFilterByType DEFLATE application/javascript
            AddOutputFilterByType DEFLATE application/x-javascript
        </IfModule>
        EOF
        
    - name: Setup SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.CONOHA_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -p ${{ secrets.CONOHA_PORT }} ${{ secrets.CONOHA_HOST }} >> ~/.ssh/known_hosts
        
    - name: Test SSH Connection
      run: |
        ssh -p ${{ secrets.CONOHA_PORT }} -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
          ${{ secrets.CONOHA_USER }}@${{ secrets.CONOHA_HOST }} "pwd && ls -la"
        
    - name: Deploy to ConoHa WING via rsync
      run: |
        rsync -avzr --delete \
          -e "ssh -p ${{ secrets.CONOHA_PORT }} -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" \
          dist/ \
          ${{ secrets.CONOHA_USER }}@${{ secrets.CONOHA_HOST }}:${{ secrets.CONOHA_REMOTE_PATH }}