name: Deploy to ConoHa WING

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build
      run: npm run build
      
    - name: Add .htaccess for SPA routing
      run: |
        cat > dist/.htaccess << 'EOF'
        RewriteEngine On
        
        # Handle React Router
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteRule . /index.html [L]
        
        # MIME Types
        AddType application/javascript .js
        AddType text/css .css
        AddType image/svg+xml .svg
        
        # Security Headers
        <IfModule mod_headers.c>
            Header always set X-Content-Type-Options nosniff
            Header always set X-Frame-Options DENY
            Header always set X-XSS-Protection "1; mode=block"
            Header always set Referrer-Policy "strict-origin-when-cross-origin"
        </IfModule>
        
        # Gzip Compression
        <IfModule mod_deflate.c>
            AddOutputFilterByType DEFLATE text/plain
            AddOutputFilterByType DEFLATE text/html
            AddOutputFilterByType DEFLATE text/xml
            AddOutputFilterByType DEFLATE text/css
            AddOutputFilterByType DEFLATE application/xml
            AddOutputFilterByType DEFLATE application/xhtml+xml
            AddOutputFilterByType DEFLATE application/rss+xml
            AddOutputFilterByType DEFLATE application/javascript
            AddOutputFilterByType DEFLATE application/x-javascript
        </IfModule>
        EOF
        
    - name: Debug SSH Key Setup
      run: |
        echo "=== Creating SSH directory ==="
        mkdir -p ~/.ssh
        echo "SSH directory created successfully"
        
        echo "=== Checking SSH key format ==="
        echo "SSH key starts with:"
        echo "${{ secrets.CONOHA_SSH_KEY }}" | head -1
        echo "SSH key ends with:"
        echo "${{ secrets.CONOHA_SSH_KEY }}" | tail -1
        echo "SSH key line count:"
        echo "${{ secrets.CONOHA_SSH_KEY }}" | wc -l
        
        echo "=== Writing SSH key ==="
        echo "${{ secrets.CONOHA_SSH_KEY }}" > ~/.ssh/id_rsa
        echo "SSH key written to file"
        
        echo "=== Setting permissions ==="
        chmod 600 ~/.ssh/id_rsa
        echo "Permissions set successfully"
        
        echo "=== Validating SSH key ==="
        ssh-keygen -l -f ~/.ssh/id_rsa || echo "Key validation failed - this is expected if key format is incorrect"
        
        echo "=== Adding known hosts ==="
        ssh-keyscan -p ${{ secrets.CONOHA_PORT }} ${{ secrets.CONOHA_HOST }} >> ~/.ssh/known_hosts 2>/dev/null || echo "ssh-keyscan failed"
        echo "Setup completed"
        
    - name: Test SSH Connection
      run: |
        echo "Testing SSH connection..."
        timeout 30 ssh -p ${{ secrets.CONOHA_PORT }} -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o ConnectTimeout=10 \
          ${{ secrets.CONOHA_USER }}@${{ secrets.CONOHA_HOST }} "pwd && ls -la" || echo "SSH connection failed"
        
    - name: Deploy to ConoHa WING via rsync
      run: |
        rsync -avzr --delete \
          -e "ssh -p ${{ secrets.CONOHA_PORT }} -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" \
          dist/ \
          ${{ secrets.CONOHA_USER }}@${{ secrets.CONOHA_HOST }}:${{ secrets.CONOHA_REMOTE_PATH }}
          
    - name: Verify deployment
      run: |
        echo "=== Verifying deployment ==="
        ssh -p ${{ secrets.CONOHA_PORT }} -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
          ${{ secrets.CONOHA_USER }}@${{ secrets.CONOHA_HOST }} \
          "ls -la ${{ secrets.CONOHA_REMOTE_PATH }} && echo '=== Files in viblog directory ===' && find ${{ secrets.CONOHA_REMOTE_PATH }} -type f -name '*.html' | head -10"